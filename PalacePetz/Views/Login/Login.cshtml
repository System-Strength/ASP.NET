@model AppBancoDominio.Login
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login - Palace Petz</title>
    <style>


        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }

        section {
            position: relative;
            min-height: 100vh;
            background: #50bac8;
            background: #00b1ff;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20px;
        }

            section .container {
                position: relative;
                width: 800px;
                height: 500px;
                background: #fff;
                box-shadow: 0 15px 50px rgba(0, 0, 0,0.1);
                overflow: hidden;
            }

                section .container .user {
                    position: absolute;
                    top: 0;
                    left: 0;
                    width: 100%;
                    height: 100%;
                    display: flex;
                }

                    section .container .user .imgBx {
                        position: relative;
                        width: 50%;
                        height: 100%;
                        background: #ff0;
                        transition: 0.5s;
                    }

                        section .container .user .imgBx img {
                            position: absolute;
                            top: 0;
                            left: 0;
                            width: 100%;
                            height: 100%;
                            object-fit: cover;
                        }

                    section .container .user .formBx {
                        position: relative;
                        width: 50%;
                        height: 100%;
                        background-color: #fff;
                        display: flex;
                        justify-content: center;
                        align-items: center;
                        padding: 40px;
                        transition: 0.5s
                    }

            section .user .formBx form h2 {
                font-size: 18px;
                font-weight: 600;
                text-transform: uppercase;
                letter-spacing: 2px;
                text-align: center;
                width: 100%;
                margin-bottom: 10px;
                color: #555;
            }

            section .container .user .formBx form input {
                position: relative;
                width: 110%;
                padding: 10px;
                background: #f5f5f5;
                color: #333;
                border: none;
                margin-top: 20px;
                margin-bottom: 25px;
                letter-spacing: 1px;
                font-weight: 300;
            }

            section .container .user .formBx form .btn {
                text-decoration: none;
                padding: 10px;
                max-width: 100px;
                background: #677eff;
                color: #fff;
                cursor: pointer;
                font-size: 14px;
                letter-spacing: 1px;
                transition: 0.5s;
            }

            section .container .user .formBx form .signup {
                position: relative;
                margin-top: 20px;
                font-size: 12px;
                letter-spacing: 1px;
                color: #555;
                text-transform: uppercase;
                font-weight: 300;
            }

                section .container .user .formBx form .signup a {
                    font-weight: 600;
                    text-decoration: none;
                    color: #677eff;
                }

            section .container .Ger {
                pointer-events: none;
            }

            section .container.active .Ger {
                pointer-events: initial;
            }

            section .container .Ger .formBx {
                left: 100%;
            }

            section .container.active .Ger .formBx {
                left: 0;
            }

            section .container .Ger .imgBx {
                left: -100%;
            }

            section .container.active .Ger .imgBx {
                left: 0;
            }


            section .container .Func .formBx {
                left: 0;
            }

            section .container.active .Func .formBx {
                left: 100%;
            }

            section .container .Func .imgBx {
                left: 0;
            }

            section .container.active .Func .imgBx {
                left: -100%;
            }

        media (max-width: 991px) {
            section .container

        {
            max-width: 400px;
        }

        section .container .imgBx {
            display: none;
        }

        section .container .user .formBx {
            width: 100%;
        }
    </style>
</head>
<body>
    <section>
        <div class="container">
            <div class="user Func">
                <div class="imgBx"><img src="~/fonts/dog1.jpg" alt="" id="img"></div>
                <div class="formBx">
                    <form>
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            <h2 id="text">Entrar como Funcionário</h2>
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.id_func, new { htmlAttributes = new { placeholder = "ID de Funcionário", @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.id_func, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.cpf_func, new { htmlAttributes = new { placeholder = "CPF do Funcionário", @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.cpf_func, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Login" class="btn btn-default" />
                                </div>
                            </div>
                            <p class="signup"><a href="#" onclick="toggleFormGer();"> ENTRAR COMO GERENTE</a></p>
                        </div>
                        }
                    </form>
                </div>
            </div>
            <div class="user Ger">
                <div class="formBx">
                    <form>
                        <h2>Entrar como Gerente</h2>
                        <input type="text" name="" placeholder="ID de Funcionário">
                        <input type="password" name="" placeholder="CPF de Funcionário">
                        @Html.ActionLink("Login", "Index", "Inicio", new { area = "" }, new { @class = "btn" })
                        <p class="signup"><a href="#" onclick="toggleFormFunc();"> ENTRAR COMO FUNCIONÁRIO</a></p>
                    </form>
                </div>
                <div class="imgBx"><img src="~/fonts/dog2.jpg" alt=""></div>
            </div>
        </div>
    </section>
</body>
@Scripts.Render("~/Scripts/Login.js")
</html>